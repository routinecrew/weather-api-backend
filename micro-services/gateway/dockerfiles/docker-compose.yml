version: '3.8'

services:
  weather-postgres:
    build:
      context: ..
      dockerfile: dockerfiles/Dockerfile.postgre
    container_name: weather-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    volumes:
      - ../data/postgres:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      timeout: 20s
      interval: 5s
      start_period: 5s
      retries: 5
    networks:
      - weather-network
    restart: unless-stopped

  weather-redis:
    image: redis:7.0    # 특정 버전 지정
    container_name: weather-redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - weather_redis_data:/data
    networks:
      - weather-network
    restart: unless-stopped

  weather-service:
    build:
      context: ../../..     # 상위 디렉토리로 컨텍스트 변경
      dockerfile: micro-services/gateway/dockerfiles/Dockerfile
    container_name: weather-service
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${PORT:-3000}
      POSTGRES_HOST: weather-postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
      REDIS_HOST: weather-redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      TZ: ${TZ:-Asia/Seoul}
      APP_NAME: ${APP_NAME:-weather-service}
    volumes:
      - ../src:/app/src
      - ../service-init:/app/service-init
      - ../shared:/app/micro-services/gateway/shared
      - ../nodemon.json:/app/micro-services/gateway/nodemon.json
      - ../.env:/app/micro-services/gateway/.env
    depends_on:
      - weather-postgres
      - weather-redis
    entrypoint: ["/wait-for-it.sh", "weather-postgres:5432", "--", "node", "dist/server.js"]
    ports:
      - "${PORT:-3000}:3000"
    networks:
      - weather-network
    restart: unless-stopped

networks:
  weather-network:
    driver: bridge

volumes:
  weather_redis_data: